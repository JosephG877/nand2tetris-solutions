CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
//Negate sel[3]:
Nand(a=sel[0],b=sel[0],out=nsel0);
Nand(a=sel[1],b=sel[1],out=nsel1);
Nand(a=sel[2],b=sel[2],out=nsel2);

//Boolean expressions of outputs w/ hierarchy
//a=in.nsel2.nsel1.nsel0
//a1=in.nsel2
//CANON:And(a=in,b=nsel2,out=a1);
Nand(a=in,b=nsel2,out=nandA1);
Nand(a=nandA1,b=nandA1,out=a1);

//a2=a1.nsel1
//CANON:And(a=a1,b=nsel1,out=a2);
Nand(a=a1,b=nsel1,out=nandA2);
Nand(a=nandA2,b=nandA2,out=a2);

//a3=a2.nsel0       <--out a
//CANON:And(a=a2,b=nsel0,out=a);
Nand(a=a2,b=nsel0,out=nandA);
Nand(a=nandA,b=nandA,out=a);

//------------------------------------
//b=in.nsel2.nsel1.sel[0]
//b1=in.nsel2
//CANON:And(a=in,b=nsel2,out=b1);
Nand(a=in,b=nsel2,out=nandB1);
Nand(a=nandB1,b=nandB1,out=b1);

//b2=b1.nsel1
//CANON:And(a=b1,b=nsel1,out=b2);
Nand(a=b1,b=nsel1,out=nandB2);
Nand(a=nandB2,b=nandB2,out=b2);

//b3=b2.sel[0]       <--out b
//CANON:And(a=b2,b=sel[0],out=b);
Nand(a=b2,b=sel[0],out=nandB);
Nand(a=nandB,b=nandB,out=b);

//------------------------------------
//c=in.nsel2.sel[1].nsel0
//c1=in.nsel2
//CANON:And(a=in,b=nsel2,out=c1);
Nand(a=in,b=nsel2,out=nandC1);
Nand(a=nandC1,b=nandC1,out=c1);

//c2=c1.sel[1]
//CANON:And(a=c1,b=sel[1],out=c2);
Nand(a=c1,b=sel[1],out=nandC2);
Nand(a=nandC2,b=nandC2,out=c2);

//c3=c2.nsel0       <--out c
//CANON:And(a=c2,b=nsel0,out=c);
Nand(a=c2,b=nsel0,out=nandC);
Nand(a=nandC,b=nandC,out=c);

//------------------------------------
//d=in.nsel2.sel[1].sel[0]
//d1=in.nsel2
//CANON:And(a=in,b=nsel2,out=d1);
Nand(a=in,b=nsel2,out=nandD1);
Nand(a=nandD1,b=nandD1,out=d1);

//d2=d1.sel[1]
//CANON:And(a=d1,b=sel[1],out=d2);
Nand(a=d1,b=sel[1],out=nandD2);
Nand(a=nandD2,b=nandD2,out=d2);

//d3=d2.sel[0]       <--out d
//CANON:And(a=d2,b=sel[0],out=d);
Nand(a=d2,b=sel[0],out=nandD);
Nand(a=nandD,b=nandD,out=d);

//------------------------------------
//e=in.sel[2].nsel1.nsel0
//e1=in.sel[2]
//CANON:And(a=in,b=sel[2],out=e1);
Nand(a=in,b=sel[2],out=nandE1);
Nand(a=nandE1,b=nandE1,out=e1);

//e2=e1.nsel1
//CANON:And(a=e1,b=nsel1,out=e2);
Nand(a=e1,b=nsel1,out=nandE2);
Nand(a=nandE2,b=nandE2,out=e2);

//e3=e2.nsel0       <--out e
//CANON:And(a=e2,b=nsel0,out=e);
Nand(a=e2,b=nsel0,out=nandE);
Nand(a=nandE,b=nandE,out=e);

//------------------------------------
//f=in.sel[2].nsel1.sel[0]
//f1=in.sel[2]
//CANON:And(a=in,b=sel[2],out=f1);
Nand(a=in,b=sel[2],out=nandF1);
Nand(a=nandF1,b=nandF1,out=f1);

//f2=f1.nsel1
//CANON:And(a=f1,b=nsel1,out=f2);
Nand(a=f1,b=nsel1,out=nandF2);
Nand(a=nandF2,b=nandF2,out=f2);

//f3=f2.sel[0]       <--out f
//CANON:And(a=f2,b=sel[0],out=f);
Nand(a=f2,b=sel[0],out=nandF);
Nand(a=nandF,b=nandF,out=f);

//------------------------------------
//g=in.sel[2].sel[1].nsel0
//g1=in.sel[2]
//CANON:And(a=in,b=sel[2],out=g1);
Nand(a=in,b=sel[2],out=nandG1);
Nand(a=nandG1,b=nandG1,out=g1);

//g2=g1.sel[1]
//CANON:And(a=g1,b=sel[1],out=g2);
Nand(a=g1,b=sel[1],out=nandG2);
Nand(a=nandG2,b=nandG2,out=g2);

//g3=g2.nsel0       <--out g
//CANON:And(a=g2,b=nsel0,out=g);
Nand(a=g2,b=nsel0,out=nandG);
Nand(a=nandG,b=nandG,out=g);

//------------------------------------
//h=in.sel[2].sel[1].sel[0]
//h1=in.sel[2]
//CANON:And(a=in,b=sel[2],out=h1);
Nand(a=in,b=sel[2],out=nandH1);
Nand(a=nandH1,b=nandH1,out=h1);

//h2=h1.sel[1]
//CANON:And(a=h1,b=sel[1],out=h2);
Nand(a=h1,b=sel[1],out=nandH2);
Nand(a=nandH2,b=nandH2,out=h2);

//h3=h2.sel[0]       <--out h
//CANON:And(a=h2,b=sel[0],out=h);
Nand(a=h2,b=sel[0],out=nandH);
Nand(a=nandH,b=nandH,out=h);
}
